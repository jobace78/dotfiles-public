#!/usr/bin/env bash

# shellcheck source=../etc/bash44.conf
if [ -f "$(dirname "${0}")"/../etc/bash44.conf ]; then
  . "$(dirname "${0}")"/../etc/bash44.conf || exit 1
else
  . "${HOME:?}"/.etc/bash44.conf || exit 1
fi

# shellcheck source=../etc/constants.conf
if [ -f "$(dirname "${0}")"/../etc/constants.conf ]; then
  . "$(dirname "${0}")"/../etc/constants.conf
else
  . "${HOME:?}"/.etc/constants.conf
fi

# shellcheck source=../etc/functions.conf
if [ -f "$(dirname "${0}")"/../etc/functions.conf ]; then
  . "$(dirname "${0}")"/../etc/functions.conf
else
  . "${HOME:?}"/.etc/functions.conf
fi

# Notes:
#   - https://github.com/kubernetes/kubectl
#
_download_and_install() {
  # INFO : local variables
  local hardware_platform
  local operating_system
  local release_version
  hardware_platform="$(uname -m 2> /dev/null)"
  operating_system="$(uname -s 2> /dev/null)"
  release_version="$(curl -L https://dl.k8s.io/release/stable.txt 2> /dev/null)"
  if [ "${operating_system}" = 'Darwin' ]; then
    if [ "${hardware_platform}" = 'arm64' ]; then
      # shellcheck disable=SC2086
      curl ${CURL_OPTIONS} -o "${HOME:?}"/.local/bin/kubectl "https://dl.k8s.io/release/${release_version:?}/bin/darwin/arm64/kubectl"
    elif [ "${hardware_platform}" = 'x86_64' ]; then
      # shellcheck disable=SC2086
      curl ${CURL_OPTIONS} -o "${HOME:?}"/.local/bin/kubectl "https://dl.k8s.io/release/${release_version:?}/bin/darwin/amd64/kubectl"
    else
      _exit 1 "unsupported hardware platform (${hardware_platform}), exiting."
    fi
  elif [ "${operating_system}" = 'Linux' ]; then
    if [ "${hardware_platform}" = 'x86_64' ]; then
      # shellcheck disable=SC2086
      curl ${CURL_OPTIONS} -o "${HOME:?}"/.local/bin/kubectl "https://dl.k8s.io/release/${release_version:?}/bin/linux/amd64/kubectl"
    else
      _exit 1 "unsupported hardware platform (${hardware_platform}), exiting."
    fi
  else
    _exit 1 "unsupported operating system (${operating_system}), exiting."
  fi
  chmod 0755 "${HOME:?}"/.local/bin/kubectl
}

_help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...]

  Options:
    -f Force

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

EOT
  exit "${exit_code}"
}

trap '_catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

OPTIND=1
while getopts 'fHUV' ARGS; do
  case "${ARGS}" in
    f)
      force='true'
      ;;
    H | U)
      _help 0
      ;;
    V)
      _exit 0 'v20230203'
      ;;
    ?)
      _help 1
      ;;
  esac
done
shift $((OPTIND - 1))

mkdir -p "${HOME:?}"/.local/bin
mkdir -p "${HOME:?}"/.local/share/zsh/site-functions

if [ -f "${HOME:?}"/.local/bin/kubectl ]; then
  if [ "${force}" = 'true' ]; then
    rm -f -v "${HOME:?}"/.local/bin/kubectl
    echo "downloading '${HOME:?}/.local/bin/kubectl'..."
    _download_and_install
  fi
else
  echo "downloading '${HOME:?}/.local/bin/kubectl'..."
  _download_and_install
fi

# completion

rm -f "${HOME:?}"/.local/share/zsh/site-functions/_kubectl
if [ -x "${HOME:?}"/.local/bin/kubectl ]; then
  echo "creating '${HOME:?}/.local/share/zsh/site-functions/_kubectl'..."
  "${HOME:?}"/.local/bin/kubectl completion zsh >> "${HOME:?}"/.local/share/zsh/site-functions/_kubectl
fi

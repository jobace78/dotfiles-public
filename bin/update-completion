#!/usr/bin/env bash
#
# bashsupport disable=BP5004
# bashsupport disable=BP5007

#######################################
# No description.
# Arguments:
#   1 - exit code (optional, integer)
# Outputs:
#   Help message to stdout.
#######################################
this::help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...]

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

EOT
  functions::exit "${exit_code}"
}

#######################################
# No description.
# Globals:
#   HOME
#   HOMEBREW_ROOT
# Arguments:
#  None
#######################################
this::update() {
  # _az
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_az
  if [ -f "${HOMEBREW_ROOT:-"$(brew --prefix 2> /dev/null)"}"/opt/az/etc/bash_completion.d/az ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_az'..."
    {
      functions::stdout '#compdef az'
      cat "${HOMEBREW_ROOT:-"$(brew --prefix 2> /dev/null)"}"/opt/az/etc/bash_completion.d/az
    } >> "${HOME:?}"/.local/share/zsh/site-functions/_az
  fi
  # _docker
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_docker
  if [ -f /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_docker'..."
    ln -s /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion "${HOME:?}"/.local/share/zsh/site-functions/_docker
  fi
  # _docker-compose
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_docker-compose
  if [ -f /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_docker-compose'..."
    ln -s /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion "${HOME:?}"/.local/share/zsh/site-functions/_docker-compose
  fi
  # _git-lfs
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_git-lfs
  if [ -x "$(command -v git-lfs)" ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_git-lfs'..."
    git-lfs completion zsh > "${HOME:?}"/.local/share/zsh/site-functions/_git-lfs
  fi
  # _op
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_op
  if [ -x "$(command -v op)" ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_op'..."
    op completion zsh > "${HOME:?}"/.local/share/zsh/site-functions/_op
  fi
  # _orbctl
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_orbctl
  if [ -x "$(command -v orbctl)" ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_orbctl'..."
    orbctl completion zsh > "${HOME:?}"/.local/share/zsh/site-functions/_orbctl
  fi
  # _pre-commit
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_pre-commit
  if [ -x "$(command -v pre-commit)" ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_pre-commit'..."
    curl --retry 5 -L -S -f -o "${HOME:?}"/.local/share/zsh/site-functions/_pre-commit -s https://raw.githubusercontent.com/zsh-users/zsh-completions/refs/heads/master/src/_pre-commit
  fi
  # _rdctl
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_rdctl
  if [ -x "$(command -v rdctl)" ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/_rdctl'..."
    rdctl completion zsh > "${HOME:?}"/.local/share/zsh/site-functions/_rdctl
  fi
  # git-completion.bash
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/git-completion.bash
  if [ -f /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/git-completion.bash'..."
    ln -s /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash "${HOME:?}"/.local/share/zsh/site-functions/git-completion.bash
  fi
  # git-completion.zsh
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/git-completion.zsh
  if [ -f /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.zsh ]; then
    functions::stdout "creating '${HOME:?}/.local/share/zsh/site-functions/git-completion.zsh'..."
    ln -s /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.zsh "${HOME:?}"/.local/share/zsh/site-functions/git-completion.zsh
  fi
}

#######################################
# No description.
# Globals:
#   HOME
#   OPTIND
# Arguments:
#  None
#######################################
main() {
  if [ -f "$(dirname "${0}")"/../etc/bash44.shconf ]; then
    # shellcheck source=../etc/bash44.shconf
    . "$(dirname "${0}")"/../etc/bash44.shconf || exit 1
  else
    # shellcheck source=/dev/null
    . "${HOME:?}"/.etc/bash44.shconf || exit 1
  fi

  if [ -f "$(dirname "${0}")"/../etc/constants.shconf ]; then
    # shellcheck source=../etc/constants.shconf
    . "$(dirname "${0}")"/../etc/constants.shconf
  else
    # shellcheck source=/dev/null
    . "${HOME:?}"/.etc/constants.shconf
  fi

  if [ -f "$(dirname "${0}")"/../etc/functions.shconf ]; then
    # shellcheck source=../etc/functions.shconf
    . "$(dirname "${0}")"/../etc/functions.shconf
  else
    # shellcheck source=/dev/null
    . "${HOME:?}"/.etc/functions.shconf
  fi

  local getopts_args
  local getopts_version
  getopts_args=''
  getopts_version='v20240819'

  trap 'functions::catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

  OPTIND=1
  while getopts 'HUV' getopts_args; do
    case "${getopts_args}" in
      H | U)
        this::help 0
        ;;
      V)
        functions::exit 0 "${getopts_version}"
        ;;
      ?)
        this::help 1
        ;;
    esac
  done
  shift $((OPTIND - 1))

  mkdir -p "${HOME:?}"/.local/share/zsh/site-functions

  this::update
}

# bashsupport disable=BP5001
if [[ ${BASH_SOURCE[0]} == "${0}" ]]; then
  main "${@}"
fi

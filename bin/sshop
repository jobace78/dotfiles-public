#!/usr/bin/env bash
#
# bashsupport disable=BP5006,BP5007

if [ -f "$(dirname "${0}")"/../etc/bash44.shconf ]; then
  # shellcheck source=../etc/bash44.shconf
  . "$(dirname "${0}")"/../etc/bash44.shconf || exit 1
else
  # shellcheck source=/dev/null
  . "${HOME:?}"/.etc/bash44.shconf || exit 1
fi

if [ -f "$(dirname "${0}")"/../etc/constants.shconf ]; then
  # shellcheck source=../etc/constants.shconf
  . "$(dirname "${0}")"/../etc/constants.shconf
else
  # shellcheck source=/dev/null
  . "${HOME:?}"/.etc/constants.shconf
fi

if [ -f "$(dirname "${0}")"/../etc/functions.shconf ]; then
  # shellcheck source=../etc/functions.shconf
  . "$(dirname "${0}")"/../etc/functions.shconf
else
  # shellcheck source=/dev/null
  . "${HOME:?}"/.etc/functions.shconf
fi

_help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...] <ACCOUNT> <ARGS>

  Options:
    -d Debug
    -l List available accounts and exit
    -r Restore default account and exit

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

  Notes:
    - https://developer.1password.com/docs/ssh/agent/config

EOT
  exit "${exit_code}"
}

_op() {
  # INFO : local variables
  local account
  account="${1:?}"
  if [ -f "${HOME:?}"/.config/1Password/ssh/agent.toml.default ]; then
    if [ "${account}" = 'default' ]; then
      cp "${HOME:?}"/.config/1Password/ssh/agent.toml.default "${HOME:?}"/.config/1Password/ssh/agent.toml
    else
      if [ -f "${HOME:?}"/.config/1Password/ssh/"${account}".toml ]; then
        cp "${HOME:?}"/.config/1Password/ssh/"${account}".toml "${HOME:?}"/.config/1Password/ssh/agent.toml
        if [ "${DEBUG}" = 'true' ]; then
          if [ -n "${SSH_AUTH_SOCK}" ]; then
            :
          else
            if [ -S "${HOME:?}"/.1password/agent.sock ]; then
              SSH_AUTH_SOCK="${HOME:?}"/.1password/agent.sock
              export SSH_AUTH_SOCK
            elif [ -S "${HOME:?}"/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock ]; then
              SSH_AUTH_SOCK="${HOME:?}"/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
              export SSH_AUTH_SOCK
            fi
          fi
          #
          # Notes:
          #   - man ssh-add
          #
          echo "listing fingerprints of all identities currently represented by the agent..."
          ssh-add -l
        fi
      else
        _exit 1 "'${HOME:?}/.config/1Password/ssh/${account}.toml' was NOT found, exiting."
      fi
    fi
  else
    _exit 1 "'${HOME:?}/.config/1Password/ssh/agent.toml.default' was NOT found, exiting."
  fi
}

trap '_catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

OPTIND=1
while getopts 'dlrHUV' ARGS; do
  case "${ARGS}" in
    d)
      DEBUG=true
      ;;
    l)
      if [ -d "${HOME:?}"/.config/1Password/ssh ]; then
        accounts=()
        for file_path in "${HOME:?}"/.config/1Password/ssh/*.toml; do
          account_file="$(basename -- "${file_path}")"
          if [ "${account_file}" = 'agent.toml' ]; then
            :
          else
            accounts+=("${account_file%.toml}")
          fi
        done
        if [[ "${accounts[*]}" ]]; then
          echo "${accounts[*]}"
          _exit 0
        else
          _exit 1 "is '${HOME:?}/.config/1Password/ssh' empty ???"
        fi
      else
        _exit 1 "'${HOME:?}/.config/1Password/ssh' was NOT found, exiting."
      fi
      ;;
    r)
      echo 'restoring default account...'
      _op default
      _exit 0
      ;;
    H | U)
      _help 0
      ;;
    V)
      _exit 0 'v20240507'
      ;;
    ?)
      _help 1
      ;;
  esac
done
shift $((OPTIND - 1))

[ $# -ge 2 ] || _help 1

_op "${1}"

ssh "${@:2}"

_op default

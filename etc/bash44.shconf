# shellcheck shell=bash
#
# bashsupport disable=BP5007
#
# Notes:
#   - https://www.gnu.org/software/bash/manual/html_node/Shell-Compatibility-Mode.html
#
if [ -n "${BASH_VERSINFO[*]}" ]; then
  if [ "${BASH_VERSINFO[0]}" -eq 4 ] && [ "${BASH_VERSINFO[1]}" -ge 4 ]; then
    shopt -s compat44
  elif [ "${BASH_VERSINFO[0]}" -ge 5 ]; then
    BASH_COMPAT=44
    export BASH_COMPAT
  else
    printf '%s\n' 'Unsupported bash version, exiting.' >&2
    exit 1
  fi
else
  printf '%s\n' 'Unsupported shell, exiting.' >&2
  exit 1
fi

if [ "${SCRIPT_DEBUG:-false}" = 'true' ]; then
  printf '%s\n' 'Script debugging is enabled, allowing bash commands and their arguments to be printed as they are executed.'
  set -x
fi

#
# Notes:
#   - BASH_CONF_SET_BUILTIN_DISABLED and BASH_CONF_SET_BUILTIN_PERMISSIVE are deprecated, use BASH_CONF_SET_BUILTIN instead...
#   - https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
#
if [ -n "${BASH_CONF_SET_BUILTIN:-}" ]; then
  case "${BASH_CONF_SET_BUILTIN}" in
    disabled) ;;
    permissive)
      set -e
      ;;
    strict)
      #
      # Notes:
      #   - this option is in "alpha" state, use at your own risk...
      #
      set -e -o pipefail -u
      ;;
    *)
      set -e -o pipefail
      ;;
  esac
else
  if [ "${BASH_CONF_SET_BUILTIN_DISABLED:-false}" = 'true' ]; then
    :
  elif [ "${BASH_CONF_SET_BUILTIN_PERMISSIVE:-false}" = 'true' ]; then
    set -e
  else
    set -e -o pipefail
  fi
fi

#
# Notes:
#   - BASH_CONF_SHOPT_BUILTIN_DISABLED is deprecated, use BASH_CONF_SHOPT_BUILTIN instead...
#   - https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html
#
if [ -n "${BASH_CONF_SHOPT_BUILTIN:-}" ]; then
  case "${BASH_CONF_SHOPT_BUILTIN}" in
    disabled) ;;
    *)
      shopt -s dotglob extglob
      ;;
  esac
else
  if [ "${BASH_CONF_SHOPT_BUILTIN_DISABLED:-false}" = 'true' ]; then
    :
  else
    shopt -s dotglob extglob
  fi
fi

#
# Notes:
#   - https://en.wikipedia.org/wiki/Umask
#
umask "${UMASK:-0007}"

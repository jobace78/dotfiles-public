# shellcheck shell=bash
#
# bashsupport disable=BP5007
#
# index:
#   - functions::catch_all
#   - functions::exit
#   - functions::log_to_stderr
#   - functions::log_to_stdout
#   - functions::print_to_stderr
#   - functions::print_to_stdout
#   - functions::stderr
#   - functions::stdout
#

#######################################
# No description.
# Arguments:
#   1 - exit code (required, integer)
# Returns:
#   Exists from shell.
#######################################
functions::catch_all() {
  # INFO : local variables
  local exit_code
  exit_code="${1:?}"
  trap - ERR SIGHUP SIGINT SIGQUIT SIGTERM
  if [[ ${exit_code} == 0 ]]; then
    :
  else
    printf '%s\n' "*** exit code << ${exit_code} >> on line $(caller) ***" >&2
  fi
  # kill "${!}" 2> /dev/null
  exit "${exit_code}"
}

#######################################
# No description.
# Arguments:
#   1 - exit code (optional, integer, defaults to '1')
#   2 - message (optional, string)
# Returns:
#   Exists from shell.
#######################################
functions::exit() {
  # INFO : local variables
  local exit_code
  local message
  exit_code="${1:-1}"
  message="${2:-}"
  if [ -n "${message}" ]; then
    printf '%s\n' "${message}"
  fi
  if [[ ${exit_code} =~ ^[0-9]+$ ]]; then
    exit "${exit_code}"
  else
    exit 1
  fi
}

#######################################
# No description.
# Arguments:
#   * - message (required, string)
# Outputs:
#   Message with date to stderr.
#######################################
functions::log_to_stderr() {
  # INFO : local variables
  local date
  local message
  date="$(date --rfc-3339=seconds 2> /dev/null)"
  message="${*:?}"
  printf '%s\n' "[${date:-1970-01-01 01:00:00+01:00}] ${message}" >&2
}

#######################################
# No description.
# Arguments:
#   * - message (required, string)
# Outputs:
#   Message with date to stdout.
#######################################
functions::log_to_stdout() {
  # INFO : local variables
  local date
  local message
  date="$(date --rfc-3339=seconds 2> /dev/null)"
  message="${*:?}"
  printf '%s\n' "[${date:-1970-01-01 01:00:00+01:00}] ${message}"
}

#######################################
# No description.
# Arguments:
#   * - message (optional, string)
# Outputs:
#   Message to stderr.
#######################################
functions::print_to_stderr() {
  # INFO : local variables
  local message
  message="${*:-}"
  printf '%s\n' "${message}" >&2
}

#######################################
# No description.
# Arguments:
#   * - message (optional, string)
# Outputs:
#   Message to stdout.
#######################################
functions::print_to_stdout() {
  # INFO : local variables
  local message
  message="${*:-}"
  printf '%s\n' "${message}"
}

#######################################
# Alias to functions::print_to_stderr.
# Arguments:
#   * - message (optional, string)
# Outputs:
#   Message to stderr.
#######################################
functions::stderr() {
  functions::print_to_stderr "${*:-}"
}

#######################################
# Alias to functions::print_to_stdout.
# Arguments:
#   * - message (optional, string)
# Outputs:
#   Message to stdout.
#######################################
functions::stdout() {
  functions::print_to_stdout "${*:-}"
}
